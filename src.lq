Use std::ffi::os::linux::write;

Fun[i32] ~> unit print v = {
    write(&v Cast * i32);
}

Struct [T :< Y] Test {
    value: T
}

Fun[unit] ~> i32 main = {
    Let value: Yun[i32] ~> u32 = v { v Cast u32 }; // Closure
    Let x = #[1_000_999, 2__1_u32, 3]; // list Constant
    Let v = #[| |]; // Array Constant
    Let v = #[|1, 2 |]; // Array Constant
    Let x = #(1, "2", #(Some(1)); // Tuple Constant
    Let x = <| x -> Box 1, y -> 2 |>; // Map
    Let x : Test = Box Test #{ value }; // Test heap
    Let c = '\u{0000}'; // char
    Let s = "\u{1234}\u{4567}\u{7890}"; // &string
    let g = "1";
    Let y: Async Block bool = Async {
        false
    }
    Let x : bool = 1 > 2;
    For i In 0 To 1000 Do {
        i :-> print
    }
    print[1];
    Back 1;
}