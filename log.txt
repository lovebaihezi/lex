
running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
Empty
Ident("use")
Empty
Ident("std")
Sign(Double(ColonColon))
Ident("ffi")
Sign(Double(ColonColon))
Ident("os")
Sign(Double(ColonColon))
Ident("linux")
Sign(Double(ColonColon))
Ident("write")
Sign(Single(Semicolon))
BreakLine
BreakLine
KeyWords(F)
Sign(Single(LeftSquareBracket))
Ident("i32")
Sign(Single(RightSquareBracket))
Empty
Sign(Single(Tilde))
Sign(Single(Greater))
Empty
Ident("unit")
Empty
Ident("print")
Empty
Ident("v")
Empty
Sign(Single(Equal))
Empty
Sign(Single(LeftCurlyBracket))
BreakLine
Empty
Empty
Empty
Empty
Ident("write")
Sign(Single(LeftParenthesis))
Sign(Single(Ampersand))
Ident("v")
Empty
Ident("cast")
Empty
Sign(Single(Asterisk))
Empty
Ident("i32")
Sign(Single(RightParenthesis))
Sign(Single(Semicolon))
BreakLine
Sign(Single(RightCurlyBracket))
BreakLine
BreakLine
Ident("struct")
Empty
Sign(Single(LeftSquareBracket))
Ident("T")
Empty
Sign(Single(Colon))
Sign(Single(Less))
Empty
KeyWords(Y)
Sign(Single(RightSquareBracket))
Empty
Ident("Test")
Empty
Sign(Single(LeftCurlyBracket))
BreakLine
Empty
Empty
Empty
Empty
Ident("value")
Sign(Single(Colon))
Empty
Ident("T")
BreakLine
Sign(Single(RightCurlyBracket))
BreakLine
BreakLine
KeyWords(F)
Sign(Single(LeftSquareBracket))
Ident("unit")
Sign(Single(RightSquareBracket))
Empty
Sign(Single(Tilde))
Sign(Single(Greater))
Empty
Ident("i32")
Empty
Ident("main")
Empty
Sign(Single(Equal))
Empty
Sign(Single(LeftCurlyBracket))
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("value")
Sign(Single(Colon))
Empty
KeyWords(Y)
Sign(Single(LeftSquareBracket))
Ident("i32")
Sign(Single(Comma))
Empty
Ident("u32")
Sign(Single(RightSquareBracket))
Empty
Sign(Single(Equal))
Empty
Ident("v")
Empty
Sign(Single(LeftCurlyBracket))
Empty
Ident("v")
Empty
Ident("as")
Empty
Ident("u32")
Empty
Sign(Single(RightCurlyBracket))
Sign(Single(Semicolon))
Empty
Comment("Closure")
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("x")
Empty
Sign(Single(Equal))
Empty
Sign(Single(Hash))
Sign(Single(LeftSquareBracket))
Constant(Number("1"))
Sign(Single(Comma))
Empty
Constant(Number("2"))
Sign(Single(Comma))
Empty
Constant(Number("3"))
Sign(Single(RightSquareBracket))
Sign(Single(Semicolon))
Empty
Comment("list Constant")
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("v")
Empty
Sign(Single(Equal))
Empty
Sign(Single(Hash))
Sign(Single(LeftSquareBracket))
Sign(Single(VerticalBar))
Empty
Sign(Single(VerticalBar))
Sign(Single(RightSquareBracket))
Sign(Single(Semicolon))
Empty
Comment("Array Constant")
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("x")
Empty
Sign(Single(Equal))
Empty
Sign(Single(Hash))
Sign(Single(LeftParenthesis))
Constant(Number("1"))
Sign(Single(Comma))
Empty
Sign(Single(Quotation))
Constant(Number("2"))
Sign(Single(Quotation))
Sign(Single(Comma))
Empty
Sign(Single(Hash))
Sign(Single(LeftParenthesis))
Ident("Some")
Sign(Single(LeftParenthesis))
Constant(Number("1"))
Sign(Single(RightParenthesis))
Sign(Single(RightParenthesis))
Sign(Single(Semicolon))
Empty
Comment("Tuple Constant")
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("x")
Empty
Sign(Single(Equal))
Empty
Sign(Single(Less))
Sign(Single(VerticalBar))
Empty
Ident("x")
Empty
Sign(Single(Minus))
Sign(Single(Greater))
Empty
Ident("box")
Empty
Constant(Number("1"))
Sign(Single(Comma))
Empty
Ident("y")
Empty
Sign(Single(Minus))
Sign(Single(Greater))
Empty
Constant(Number("2"))
Empty
Sign(Single(VerticalBar))
Sign(Single(Greater))
Sign(Single(Semicolon))
Empty
Comment("Map")
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("x")
Empty
Sign(Single(Colon))
Empty
Ident("Test")
Empty
Sign(Single(Equal))
Empty
Ident("box")
Empty
Ident("Test")
Empty
Sign(Single(Hash))
Sign(Single(LeftCurlyBracket))
Empty
Ident("value")
Empty
Sign(Single(RightCurlyBracket))
Sign(Single(Semicolon))
Empty
Comment("Test heap")
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("c")
Empty
Sign(Single(Equal))
Empty
Sign(Single(Apostrophe))
Sign(Single(BackSlash))
Ident("u")
Sign(Single(LeftCurlyBracket))
Constant(Number("0000"))
Sign(Single(RightCurlyBracket))
Sign(Single(Apostrophe))
Sign(Single(Semicolon))
Empty
Comment("char")
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("s")
Empty
Sign(Single(Equal))
Empty
Sign(Single(Quotation))
Sign(Single(BackSlash))
Ident("u")
Sign(Single(LeftCurlyBracket))
Constant(Number("1234"))
Sign(Single(RightCurlyBracket))
Sign(Single(BackSlash))
Ident("u")
Sign(Single(LeftCurlyBracket))
Constant(Number("4567"))
Sign(Single(RightCurlyBracket))
Sign(Single(BackSlash))
Ident("u")
Sign(Single(LeftCurlyBracket))
Constant(Number("7890"))
Sign(Single(RightCurlyBracket))
Sign(Single(Quotation))
Sign(Single(Semicolon))
Empty
Comment("&string")
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("y")
Sign(Single(Colon))
Empty
Ident("async")
Empty
Ident("block")
Empty
Ident("bool")
Empty
Sign(Single(Equal))
Empty
Ident("async")
Empty
Sign(Single(LeftCurlyBracket))
BreakLine
Empty
Empty
Empty
Empty
Empty
Empty
Empty
Empty
Ident("false")
BreakLine
Empty
Empty
Empty
Empty
Sign(Single(RightCurlyBracket))
BreakLine
Empty
Empty
Empty
Empty
Ident("let")
Empty
Ident("x")
Empty
Sign(Single(Colon))
Empty
Ident("bool")
Empty
Sign(Single(Equal))
Empty
Constant(Number("1"))
Empty
Sign(Single(Greater))
Empty
Constant(Number("2"))
Sign(Single(Semicolon))
BreakLine
Empty
Empty
Empty
Empty
Ident("for")
Empty
Ident("i")
Empty
Ident("in")
Empty
Constant(Number("0"))
Empty
Ident("to")
Empty
Constant(Number("1000"))
Empty
Ident("do")
Empty
Sign(Single(LeftCurlyBracket))
BreakLine
Empty
Empty
Empty
Empty
Empty
Empty
Empty
Empty
Ident("i")
Empty
Sign(Single(Colon))
Sign(Single(Minus))
Sign(Single(Greater))
Empty
Ident("print")
BreakLine
Empty
Empty
Empty
Empty
Sign(Single(RightCurlyBracket))
BreakLine
Empty
Empty
Empty
Empty
Ident("print")
Sign(Single(LeftSquareBracket))
Constant(Number("1"))
Sign(Single(RightSquareBracket))
Sign(Single(Semicolon))
BreakLine
Empty
Empty
Empty
Empty
Ident("back")
Empty
Constant(Number("1"))
Sign(Single(Semicolon))
BreakLine
Sign(Single(RightCurlyBracket))
test token::token_test::test_comment_token ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s

